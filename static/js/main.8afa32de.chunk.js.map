{"version":3,"sources":["Model.ts","TipEngine.ts","Result.tsx","ScenarioComponent.tsx","ServiceQualityComponent.tsx","InputBillComponent.tsx","Page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ServiceQuality","Scenario","waiterServiceQualityToTip","Map","Low","Medium","High","restaurantDeliveryServiceQualityToTip","restaurantTakeoutServiceQualityToTip","cabDriverServiceQualityToTip","valetServiceQualityToTip","salonServiceQualityToTip","undefinedToNull","x","undefined","toDollarString","totalInCent","centAmount","toString","slice","dollarAmount","Math","floor","ResultComponent","props","input","scenario","Waiter","get","serviceQuality","CabDriver","Salon","tipMultiplier","this","toFixed","billAmount","RestaurantDelivery","RestaurantTakeout","Valet","shouldNotHaveBill","className","tipAmount","totalAmount","tipPercentage","React","Component","ScenarioComponent","onClick","onSelectScenario","ServiceQualityComponent","onSelectServiceQuality","expectedPattern","prettifyDigits","output","len","length","join","stripZeroPrefix","digits","i","BillInputComponent","state","value","errorMessage","event","arg","fn","oldState","newState","userEnteredString","matched","match","Array","parseInt","parseBillAmountInput","target","a","b","isArrayEqual","setState","preventDefault","billAmountInCents","acc","digitsToNumber","onSubmit","text","selectionStart","selectionEnd","renderErrorMessage","type","inputMode","onChange","handleChange","bind","handleClick","handleSubmit","InputBillComponent","amountInCents","Page","onSubmitBillAmount","tipMultipier","round","calculateTip","nullInput","App","history","stepNumber","current","concat","startAgain","goBack","getBackButton","handleSelectScenario","handleSelectServiceQuality","handleSubmitBillAmount","getStartAgainButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updateApp","navigator","serviceWorker","getRegistrations","registrations","update","ReactDOM","render","StrictMode","document","getElementById","console","log","register","scope","reg","catch","err","warn"],"mappings":"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","file":"static/js/main.8afa32de.chunk.js","sourcesContent":["export enum ServiceQuality {\n  Low,\n  Medium,\n  High\n};\n\nexport enum Scenario {\n  Waiter,\n  RestaurantDelivery,\n  RestaurantTakeout,\n  CabDriver,\n  Valet,\n  Salon,\n};\n\nexport interface Input {\n  scenario: Scenario | null,\n  billAmount: number | null\n  serviceQuality: ServiceQuality | null,\n};\n","import { Input, Scenario, ServiceQuality } from './Model'\n\nconst waiterServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 0.15],\n  [ServiceQuality.Medium, 0.18],\n  [ServiceQuality.High, 0.22],\n]);\n\nconst restaurantDeliveryServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 100],\n  [ServiceQuality.Medium, 300],\n  [ServiceQuality.High, 500],\n]);\n\nconst restaurantTakeoutServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 0],\n  [ServiceQuality.Medium, 100],\n  [ServiceQuality.High, 300],\n]);\n\nconst cabDriverServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 0.1],\n  [ServiceQuality.Medium, 0.15],\n  [ServiceQuality.High, 0.2],\n]);\n\nconst valetServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 100],\n  [ServiceQuality.Medium, 300],\n  [ServiceQuality.High, 500],\n]);\n\nconst salonServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 0.15],\n  [ServiceQuality.Medium, 0.2],\n  [ServiceQuality.High, 0.25],\n]);\n\nfunction undefinedToNull<T>(x: T | undefined): T | null {\n  if (x === undefined)\n    return null;\n  else\n    return x\n}\n  \nexport function tipMultiplier(input: Input) {\n  switch (input.scenario) {\n    case Scenario.Waiter: {\n      return waiterServiceQualityToTip?.get(input.serviceQuality);\n    }\n    case Scenario.CabDriver: {\n      return cabDriverServiceQualityToTip?.get(input.serviceQuality);\n    }\n    case Scenario.Salon: {\n      return salonServiceQualityToTip?.get(input.serviceQuality);\n    }\n    default: {\n      return null\n    }\n  }\n}\n\nexport function calculateTip(input: Input) {\n  let tipMultipier: number | undefined\n  switch (input.scenario) {\n    case Scenario.Waiter: {\n      tipMultipier = waiterServiceQualityToTip?.get(input.serviceQuality);\n      break;\n    }\n    case Scenario.RestaurantDelivery: {\n      return undefinedToNull(restaurantDeliveryServiceQualityToTip?.get(input.serviceQuality));\n    }\n    case Scenario.RestaurantTakeout: {\n      return undefinedToNull(restaurantTakeoutServiceQualityToTip?.get(input.serviceQuality));\n    }\n    case Scenario.CabDriver: {\n      tipMultipier = cabDriverServiceQualityToTip?.get(input.serviceQuality);\n      break;\n    }\n    case Scenario.Valet: {\n      return undefinedToNull(valetServiceQualityToTip?.get(input.serviceQuality));\n    }\n    case Scenario.Salon: {\n      tipMultipier = salonServiceQualityToTip?.get(input.serviceQuality);\n      break;\n    }\n    default: {\n      return null\n    }\n  }\n\n  if ((tipMultipier !== undefined) && (input.billAmount !== null)) {\n    return Math.round(tipMultipier * input.billAmount);\n  } else {\n    return null;\n  }\n}\n\nexport function shouldNotHaveBill(scenario : Scenario) {\n  return (scenario === Scenario.RestaurantDelivery\n          || scenario === Scenario.RestaurantTakeout\n          || scenario === Scenario.Valet)\n}\n","import React from 'react';\nimport { Input } from './Model';\nimport { shouldNotHaveBill, tipMultiplier } from './TipEngine';\n\nfunction toDollarString(totalInCent: number): string {\n  let centAmount = (\"0\" + (totalInCent % 100).toString()).slice(-2)\n  let dollarAmount = Math.floor(totalInCent / 100).toString()\n  return `${dollarAmount}.${centAmount}`\n}\n\ninterface ResultComponentProps {\n  tipAmount: number,\n  billAmount: number,\n  input: Input,\n};\n\nexport class ResultComponent extends React.Component<ResultComponentProps, {}> {\n  // eslint-disable-next-line\n  constructor(props: ResultComponentProps) {\n    super(props);\n  }\n\n  tipPercentage() {\n    let x = tipMultiplier(this.props.input)\n    if (x === null || x === undefined) {\n      return null\n    }\n    return (x * 100).toFixed(0)\n  }\n\n  render() {\n    let scenario = this.props.input.scenario\n    if (scenario === null) {\n      // eslint-disable-next-line\n      throw \"Assertion failure\"\n    }\n\n    if (this.props.billAmount === 0 &&\n      shouldNotHaveBill(scenario)) {\n      return (\n        <div>\n          <div className='input-prompt'>\n            <h2>Result</h2>\n          </div>\n          <div className='output-results'>\n            <div className='output-result'>\n              <table>\n                <tr>\n                  <td className='left-text'>Tip (fixed):</td>\n                  <td>$</td>\n                  <td className='right-text'>{toDollarString(this.props.tipAmount)}</td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      let totalAmount = this.props.tipAmount + this.props.billAmount\n      return (\n        <div>\n          <div className='input-prompt'>\n            <h2>Result</h2>\n          </div>\n          <div className='output-results'>\n            <div className='output-result'>\n              <table>\n                <tbody>\n                  <tr>\n                    <td className='left-text'>Bill:</td>\n                    <td>$</td>\n                    <td className='right-text'>{toDollarString(this.props.billAmount)}</td>\n                  </tr>\n                  <tr>\n                    <td className='left-text'>Tip @ {this.tipPercentage()}%:</td>\n                    <td>$</td>\n                    <td className='right-text'>{toDollarString(this.props.tipAmount)}</td>\n                  </tr>\n                  <tr>\n                    <td className='left-text'>Total:</td>\n                    <td>$</td>\n                    <td className='right-text'>{toDollarString(totalAmount)}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n};\n","import React from 'react';\n\nimport { Scenario } from \"./Model\"\n\nexport interface ScenarioProps {\n  onSelectScenario: (arg0: Scenario) => void\n}\n\nexport class ScenarioComponent extends React.Component<ScenarioProps, {}> {\n  render() {\n    return (\n      <div className='input-scenario'>\n        <div className='input-prompt'>\n          <h2>Test V14,  What is the ocassion?</h2>\n        </div>\n        <div className='button-group-container'>\n          <div className='row button-row'>\n            <div className=\"col-md-4 col-xs-12\">\n              <button onClick={() => this.props.onSelectScenario(Scenario.Waiter)}>🍽️ Waiter</button>\n            </div>\n            <div className=\"col-md-4 col-xs-12\">\n              <button className=\"col-md-4 col-xs-12\" onClick={() => this.props.onSelectScenario(Scenario.RestaurantDelivery)}>🍕 Restaurant Delivery</button>\n            </div>\n            <div className=\"col-md-4 col-xs-12\">\n              <button className=\"col-md-4 col-xs-12\" onClick={() => this.props.onSelectScenario(Scenario.RestaurantTakeout)}>🥡 Restaurant Takeout</button>\n            </div>\n          </div>\n          <div className='row button-row'>\n            <div className=\"col-md-4 col-xs-12\">\n              <button className=\"col-md-4 col-xs-12\" onClick={() => this.props.onSelectScenario(Scenario.CabDriver)}>🚕 Cab Driver</button>\n            </div>\n            <div className=\"col-md-4 col-xs-12\">\n              <button className=\"col-md-4 col-xs-12\" onClick={() => this.props.onSelectScenario(Scenario.Valet)}>🔑 Valet</button>\n            </div>\n            <div className=\"col-md-4 col-xs-12\">\n              <button className=\"col-md-4 col-xs-12\" onClick={() => this.props.onSelectScenario(Scenario.Salon)}>💇 Hair or Nail Salon/Barber</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n};\n","import React from 'react';\n\nimport { ServiceQuality } from \"./Model\"\n\nexport interface ServiceQualityProps {\n  onSelectServiceQuality: (serviceQuality: ServiceQuality) => void\n}\n\nexport class ServiceQualityComponent extends React.Component<ServiceQualityProps, {}> {\n  render() {\n    return (\n      <div className='input-service-quality'>\n        <div className='input-prompt'>\n          <h2>How was the service?</h2>\n        </div>\n        <div className='button-row'>\n          <button onClick={() => this.props.onSelectServiceQuality(ServiceQuality.Low)}>🥺 Low</button>\n          <button onClick={() => this.props.onSelectServiceQuality(ServiceQuality.Medium)}>🙂 Medium</button>\n          <button onClick={() => this.props.onSelectServiceQuality(ServiceQuality.High)}>😍 High</button>\n        </div>\n      </div>\n    )\n  }\n};\n","import React from 'react';\n\ninterface InputBillProps {\n  onSubmit: (billAmount: number) => void\n}\n\ninterface InputBillState {\n  value: string,\n}\n\ninterface BillAmountCmoponentProperties {\n  onSubmit: (billAmountInCents: number) => void\n};\n\ninterface BillAmountComponentState {\n  value: Array<number>,\n  errorMessage: null | string\n}\n\nconst expectedPattern = /^([0-9]+)\\.([0-9]?[0-9]?[0-9])$/\n\nfunction parseBillAmountInput(userEnteredString: String) {\n  const matched = userEnteredString.match(expectedPattern)\n\n  if (matched) {\n    let dollarAmount = matched[1]\n    let centAmount = matched[2]\n    let output = new Array(dollarAmount.length + centAmount.length)\n\n    for (let i = 0; i < dollarAmount.length; i++) {\n      output[i] = parseInt(dollarAmount[i])\n    }\n\n    for (let i = 0; i < centAmount.length; i++) {\n      output[i + dollarAmount.length] = parseInt(centAmount[i])\n    }\n\n    return output\n  } else {\n    return null\n  }\n}\n\nfunction isArrayEqual(a: Readonly<Array<Number>>, b: Readonly<Array<Number>>) {\n  if (a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false\n      }\n    }\n\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction prettifyDigits(output: Array<number>) {\n  let len = output.length;\n  if (len === 0) {\n    return \"0.00\"\n  } else if (len === 1) {\n    return `0.0${output[0]}`\n  } else if (len === 2) {\n    return `0.${output[0]}${output[1]}`\n  } else {\n    let dollarAmount = output.slice(0, len - 2).join(\"\")\n    return `${dollarAmount}.${output[len - 2]}${output[len - 1]}`\n  }\n}\n\nfunction stripZeroPrefix(digits: Array<number>) {\n  for (let i = 0; i < digits.length; i++) {\n    if (digits[i] !== 0) {\n      return digits.slice(i);\n    }\n  }\n\n  return []\n}\n\nfunction optionMap<T, S>(arg: T | null, fn: (arg: T) => S) {\n  if (arg === null) {\n    return null\n  } else {\n    return fn(arg);\n  }\n}\n\nfunction digitsToNumber(digits: Readonly<Array<number>>) {\n  let acc = 0;\n  for (const digit of digits) {\n    acc = (acc * 10) + digit;\n  }\n  return acc;\n}\n\nclass BillInputComponent extends React.Component<BillAmountCmoponentProperties, BillAmountComponentState> {\n  constructor(props: BillAmountCmoponentProperties) {\n    super(props);\n    this.state = { value: [], errorMessage: null }\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    let oldState = this.state.value;\n    let newState = optionMap(parseBillAmountInput(event.target.value), stripZeroPrefix);\n    if (newState !== null && !isArrayEqual(newState, oldState)) {\n      this.setState({ value: newState, errorMessage: null });\n    }\n  }\n\n  handleSubmit(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    event.preventDefault();\n    let billAmountInCents = digitsToNumber(this.state.value)\n    if (billAmountInCents === 0) {\n      let newState = { ...this.state }\n      newState.errorMessage = \"Bill Amount cannot be zero!\"\n      this.setState(newState)\n    } else {\n      this.props.onSubmit(billAmountInCents);\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.state.errorMessage !== null) {\n      return <div className=\"alert alert-warning\">Oh noes :( {this.state.errorMessage}</div>\n    }\n  }\n\n  handleClick(event : any) {\n    let text = prettifyDigits(this.state.value)\n    event.target.selectionStart = text.length\n    event.target.selectionEnd   = text.length\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderErrorMessage()}\n        <p className='input-bill-amount'>\n          <input className=\"form-control\"\n            type=\"number\"\n            inputMode=\"decimal\"\n            value={prettifyDigits(this.state.value)}\n            onChange={this.handleChange.bind(this)}\n            onClick={this.handleClick.bind(this)}\n          />\n        </p>\n        <p>\n          <button className=\"btn-submit\" \n            onClick={this.handleSubmit.bind(this)}\n          >\n            Submit\n          </button>\n        </p>\n      </div>\n    )\n  }\n}\n\nclass InputBillComponent extends React.Component<InputBillProps, InputBillState> {\n  // eslint-disable-next-line\n  constructor(props: InputBillProps) {\n    super(props);\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(amountInCents: number) {\n    this.props.onSubmit(amountInCents);\n  }\n\n  render() {\n    return (\n      <div className='input-bill-amount'>\n        <div className='input-prompt'> Enter bill amount </div>\n        <div className='currency-number-input'>\n          <BillInputComponent\n            onSubmit={this.handleSubmit.bind(this)}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default InputBillComponent;\n","import React from 'react';\n\nimport { Input, Scenario, ServiceQuality } from \"./Model\"\nimport { ResultComponent } from \"./Result\"\nimport { ScenarioComponent } from \"./ScenarioComponent\"\nimport { ServiceQualityComponent } from \"./ServiceQualityComponent\"\nimport InputBillComponent from \"./InputBillComponent\"\nimport { calculateTip } from \"./TipEngine\"\nimport './App.css';\n\ninterface PageProps {\n  input: Input,\n  onSelectScenario: (scenario: Scenario) => void,\n  onSelectServiceQuality: (serviceQuality: ServiceQuality) => void,\n  onSubmitBillAmount: (billAmount: number) => void,\n}\nexport class Page extends React.Component<PageProps, {}> {\n  render() {\n    if (this.props.input.scenario === null) {\n      return <ScenarioComponent onSelectScenario={(scenario) => this.props.onSelectScenario(scenario)} />\n    }\n\n    if (this.props.input.billAmount === null) {\n      return <InputBillComponent onSubmit={(billAmount) => this.props.onSubmitBillAmount(billAmount)} />\n    }\n\n    if (this.props.input.serviceQuality === null) {\n      return <ServiceQualityComponent onSelectServiceQuality={(serviceQuality) => this.props.onSelectServiceQuality(serviceQuality)} />\n    }\n\n    let tipAmount = calculateTip(this.props.input);\n\n    if (tipAmount !== null) {\n      return (\n        <div className='result'>\n          <ResultComponent\n            input={this.props.input}\n            billAmount={this.props.input.billAmount}\n            tipAmount={tipAmount}\n          />\n        </div>\n      )\n    }\n  }\n};\n","import React from 'react';\n\nimport { Input, Scenario, ServiceQuality } from \"./Model\"\nimport { Page } from \"./Page\"\nimport './App.css';\n\nconst nullInput: Input = {\n  scenario: null,\n  billAmount: null,\n  serviceQuality: null,\n}\n\ninterface AppState {\n  history: Input[],\n  stepNumber: number,\n}\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      history: [nullInput],\n      stepNumber: 0,\n    }\n  }\n\n  handleSelectScenario(scenario: Scenario) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = { ...history[history.length - 1] }\n\n    current.scenario = scenario;\n\n    if (scenario === Scenario.Valet || scenario === Scenario.RestaurantDelivery || scenario === Scenario.RestaurantTakeout) {\n      current.billAmount = 0;\n    }\n\n    this.setState({\n      history: history.concat(current),\n      stepNumber: history.length,\n    });\n  }\n\n  handleSelectServiceQuality(serviceQuality: ServiceQuality) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = { ...history[history.length - 1] }\n\n    current.serviceQuality = serviceQuality;\n\n    this.setState({\n      history: history.concat(current),\n      stepNumber: history.length,\n    });\n  }\n\n  handleSubmitBillAmount(billAmount: number) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = { ...history[history.length - 1] }\n\n    current.billAmount = billAmount;\n\n    this.setState({\n      history: history.concat(current),\n      stepNumber: history.length,\n    });\n  }\n\n  startAgain() {\n    this.setState({\n      history: [nullInput],\n      stepNumber: 0,\n    })\n  }\n  getStartAgainButton() {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = { ...history[history.length - 1] }\n\n    if (current.scenario !== null && current.billAmount !== null && current.serviceQuality !== null) {\n      return (\n        <button onClick={() => this.startAgain()}>Start Again</button>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n\n  goBack() {\n    const stepNumber = this.state.stepNumber - 1\n    this.setState({\n      stepNumber: stepNumber,\n    })\n  }\n  getBackButton() {\n    if (this.state.stepNumber !== 0) {\n      return (\n        <button onClick={() => this.goBack()}>Back</button>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n\n    return (\n      <div className='container'>\n        <div className='navigation'>\n          <div>{this.getBackButton()}</div>\n        </div>\n        <div className='page'>\n          < Page\n            input={current}\n            onSelectScenario={(scenario: Scenario) => this.handleSelectScenario(scenario)}\n            onSelectServiceQuality={(serviceQuality: ServiceQuality) => this.handleSelectServiceQuality(serviceQuality)}\n            onSubmitBillAmount={(billAmount: number) => this.handleSubmitBillAmount(billAmount)}\n          />\n        </div>\n        <div className='navigation'>\n          <div>{this.getStartAgainButton()}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nfunction updateApp () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.getRegistrations().then(function (registrations) {\n      for (let registration of registrations) {\n        registration.update()\n      }\n    })\n  }\n}\n\nif ('serviceWorker' in navigator) {\n  console.log(\"Hello there\")\n  navigator.serviceWorker.register('/sw.js', { scope: \".\" }).then(function(reg) {\n    console.log('Successfully registered service worker', reg);\n    updateApp();\n  }).catch(function(err) {\n    console.warn('Error whilst registering service worker', err);\n  });\n}\n\nupdateApp();\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}