{"version":3,"sources":["Model.ts","TipEngine.ts","Result.tsx","ScenarioComponent.tsx","ServiceQualityComponent.tsx","InputBillComponent.tsx","Page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ServiceQuality","Scenario","waiterServiceQualityToTip","Map","Low","Medium","High","restaurantDeliveryServiceQualityToTip","restaurantTakeoutServiceQualityToTip","cabDriverServiceQualityToTip","valetServiceQualityToTip","salonServiceQualityToTip","undefinedToNull","x","undefined","toDollarString","totalInCent","centAmount","toString","slice","dollarAmount","Math","floor","ResultComponent","props","input","scenario","Waiter","get","serviceQuality","CabDriver","Salon","tipMultiplier","this","toFixed","tipPercentage","billAmount","RestaurantDelivery","RestaurantTakeout","Valet","shouldNotHaveBill","tipAmount","totalAmount","renderTipPercentage","React","Component","ScenarioComponent","className","onClick","onSelectScenario","ServiceQualityComponent","onSelectServiceQuality","expectedPattern","prettifyDigits","output","len","length","join","stripZeroPrefix","digits","i","BillInputComponent","state","value","errorMessage","event","arg","fn","oldState","newState","userEnteredString","matched","match","Array","parseInt","parseBillAmountInput","target","a","b","isArrayEqual","setState","preventDefault","billAmountInCents","acc","digitsToNumber","onSubmit","renderErrorMessage","onChange","handleChange","bind","handleSubmit","InputBillComponent","amountInCents","Page","onSubmitBillAmount","tipMultipier","round","calculateTip","nullInput","App","history","stepNumber","current","concat","startAgain","goBack","handleSelectScenario","handleSelectServiceQuality","handleSubmitBillAmount","getBackButton","getStartAgainButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","console","log","serviceWorker","register","scope","reg","catch","err","warn"],"mappings":"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","file":"static/js/main.5aad8040.chunk.js","sourcesContent":["export enum ServiceQuality {\n  Low,\n  Medium,\n  High\n};\n\nexport enum Scenario {\n  Waiter,\n  RestaurantDelivery,\n  RestaurantTakeout,\n  CabDriver,\n  Valet,\n  Salon,\n};\n\nexport interface Input {\n  scenario: Scenario | null,\n  billAmount: number | null\n  serviceQuality: ServiceQuality | null,\n};\n","import { Input, Scenario, ServiceQuality } from './Model'\n\nconst waiterServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 0.15],\n  [ServiceQuality.Medium, 0.18],\n  [ServiceQuality.High, 0.22],\n]);\n\nconst restaurantDeliveryServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 100],\n  [ServiceQuality.Medium, 300],\n  [ServiceQuality.High, 500],\n]);\n\nconst restaurantTakeoutServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 0],\n  [ServiceQuality.Medium, 100],\n  [ServiceQuality.High, 300],\n]);\n\nconst cabDriverServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 0.1],\n  [ServiceQuality.Medium, 0.15],\n  [ServiceQuality.High, 0.2],\n]);\n\nconst valetServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 100],\n  [ServiceQuality.Medium, 300],\n  [ServiceQuality.High, 500],\n]);\n\nconst salonServiceQualityToTip: Map<ServiceQuality | null, number> = new Map([\n  [ServiceQuality.Low, 0.15],\n  [ServiceQuality.Medium, 0.2],\n  [ServiceQuality.High, 0.25],\n]);\n\nfunction undefinedToNull<T>(x: T | undefined): T | null {\n  if (x === undefined)\n    return null;\n  else\n    return x\n}\n  \nexport function tipMultiplier(input: Input) {\n  switch (input.scenario) {\n    case Scenario.Waiter: {\n      return waiterServiceQualityToTip?.get(input.serviceQuality);\n    }\n    case Scenario.CabDriver: {\n      return cabDriverServiceQualityToTip?.get(input.serviceQuality);\n    }\n    case Scenario.Salon: {\n      return salonServiceQualityToTip?.get(input.serviceQuality);\n    }\n    default: {\n      return null\n    }\n  }\n}\n\nexport function calculateTip(input: Input) {\n  let tipMultipier: number | undefined\n  switch (input.scenario) {\n    case Scenario.Waiter: {\n      tipMultipier = waiterServiceQualityToTip?.get(input.serviceQuality);\n      break;\n    }\n    case Scenario.RestaurantDelivery: {\n      return undefinedToNull(restaurantDeliveryServiceQualityToTip?.get(input.serviceQuality));\n    }\n    case Scenario.RestaurantTakeout: {\n      return undefinedToNull(restaurantTakeoutServiceQualityToTip?.get(input.serviceQuality));\n    }\n    case Scenario.CabDriver: {\n      tipMultipier = cabDriverServiceQualityToTip?.get(input.serviceQuality);\n      break;\n    }\n    case Scenario.Valet: {\n      return undefinedToNull(valetServiceQualityToTip?.get(input.serviceQuality));\n    }\n    case Scenario.Salon: {\n      tipMultipier = salonServiceQualityToTip?.get(input.serviceQuality);\n      break;\n    }\n    default: {\n      return null\n    }\n  }\n\n  if ((tipMultipier !== undefined) && (input.billAmount !== null)) {\n    return Math.round(tipMultipier * input.billAmount);\n  } else {\n    return null;\n  }\n}\n\nexport function shouldNotHaveBill(scenario : Scenario) {\n  return (scenario === Scenario.RestaurantDelivery\n          || scenario === Scenario.RestaurantTakeout\n          || scenario === Scenario.Valet)\n}\n","import React from 'react';\nimport { Input } from './Model';\nimport { shouldNotHaveBill, tipMultiplier } from './TipEngine';\n\nfunction toDollarString(totalInCent: number): string {\n  let centAmount = (\"0\" + (totalInCent % 100).toString()).slice(-2)\n  let dollarAmount = Math.floor(totalInCent / 100).toString()\n  return `$ ${dollarAmount}.${centAmount}`\n}\n\ninterface ResultComponentProps {\n  tipAmount: number,\n  billAmount: number,\n  input: Input,\n};\n\nexport class ResultComponent extends React.Component<ResultComponentProps, {}> {\n  // eslint-disable-next-line\n  constructor(props: ResultComponentProps) {\n    super(props);\n  }\n\n  tipPercentage() {\n    let x = tipMultiplier(this.props.input)\n    if (x === null || x === undefined) {\n      return null\n    }\n\n    return (x * 100).toFixed(2)\n  }\n\n  renderTipPercentage() {\n    let tipPercentage = this.tipPercentage();\n    if (tipPercentage === null) {\n      return null\n    } else {\n      return <p>Tip percentage: {tipPercentage}%</p>\n    }\n  }\n\n  render() {\n    let scenario = this.props.input.scenario\n    if (scenario === null) {\n      // eslint-disable-next-line\n      throw \"Assertion failure\"\n    }\n\n    if (this.props.billAmount === 0 &&\n      shouldNotHaveBill(scenario)) {\n      return <p>Tip Amount : {toDollarString(this.props.tipAmount)}</p>\n\n    } else {\n      let totalAmount = this.props.tipAmount + this.props.billAmount\n      return (\n        <div>\n          <p>Tip Amount : {toDollarString(this.props.tipAmount)}</p>\n          {this.renderTipPercentage()}\n          <p>Bill Amount: {toDollarString(this.props.billAmount)}</p>\n          <p>Total : {toDollarString(totalAmount)}</p>\n        </div>\n      )\n    }\n  }\n};\n","import React from 'react';\n\nimport { Scenario } from \"./Model\"\n\nexport interface ScenarioProps {\n  onSelectScenario: (arg0: Scenario) => void\n}\n\nexport class ScenarioComponent extends React.Component<ScenarioProps, {}> {\n  render() {\n    return (\n      <div className='input-scenario'>\n        <div className='input-prompt'>\n          <strong>What is the ocassion?</strong>\n        </div>\n        <button onClick={() => this.props.onSelectScenario(Scenario.Waiter)}>🍽️ Waiter</button>\n        <button onClick={() => this.props.onSelectScenario(Scenario.RestaurantDelivery)}>🍕 Restaurant Delivery</button>\n        <button onClick={() => this.props.onSelectScenario(Scenario.RestaurantTakeout)}>🥡 Restaurant Takeout</button>\n        <button onClick={() => this.props.onSelectScenario(Scenario.CabDriver)}>🚕 Cab Driver</button>\n        <button onClick={() => this.props.onSelectScenario(Scenario.Valet)}>🔑 Valet</button>\n        <button onClick={() => this.props.onSelectScenario(Scenario.Salon)}>💇 Hair or Nail Salon/Barber</button>\n      </div>\n    )\n  }\n};\n","import React from 'react';\n\nimport { ServiceQuality } from \"./Model\"\n\nexport interface ServiceQualityProps {\n  onSelectServiceQuality: (serviceQuality: ServiceQuality) => void\n}\n\nexport class ServiceQualityComponent extends React.Component<ServiceQualityProps, {}> {\n  render() {\n    return (\n      <div className='input-service-quality'>\n        <div className='input-prompt'>\n          <strong>How was the service?</strong>\n        </div>\n        <button onClick={() => this.props.onSelectServiceQuality(ServiceQuality.Low)}>😓 Low</button>\n        <button onClick={() => this.props.onSelectServiceQuality(ServiceQuality.Medium)}>😐 Medium</button>\n        <button onClick={() => this.props.onSelectServiceQuality(ServiceQuality.High)}>😄 High</button>\n      </div>\n    )\n  }\n};\n","import React from 'react';\n\ninterface InputBillProps {\n  onSubmit: (billAmount: number) => void\n}\n\ninterface InputBillState {\n  value: string,\n}\n\ninterface BillAmountCmoponentProperties {\n  onSubmit: (billAmountInCents: number) => void\n};\n\ninterface BillAmountComponentState {\n  value: Array<number>,\n  errorMessage: null | string\n}\n\nconst expectedPattern = /^([0-9]+)\\.([0-9]?[0-9]?[0-9])$/\n\nfunction parseBillAmountInput(userEnteredString: String) {\n  const matched = userEnteredString.match(expectedPattern)\n\n  if (matched) {\n    let dollarAmount = matched[1]\n    let centAmount = matched[2]\n    let output = new Array(dollarAmount.length + centAmount.length)\n\n    for (let i = 0; i < dollarAmount.length; i++) {\n      output[i] = parseInt(dollarAmount[i])\n    }\n\n    for (let i = 0; i < centAmount.length; i++) {\n      output[i + dollarAmount.length] = parseInt(centAmount[i])\n    }\n\n    return output\n  } else {\n    return null\n  }\n}\n\nfunction isArrayEqual(a: Readonly<Array<Number>>, b: Readonly<Array<Number>>) {\n  if (a.length === b.length) {\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false\n      }\n    }\n\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction prettifyDigits(output: Array<number>) {\n  let len = output.length;\n  if (len === 0) {\n    return \"0.00\"\n  } else if (len === 1) {\n    return `0.0${output[0]}`\n  } else if (len === 2) {\n    return `0.${output[0]}${output[1]}`\n  } else {\n    let dollarAmount = output.slice(0, len - 2).join(\"\")\n    return `${dollarAmount}.${output[len - 2]}${output[len - 1]}`\n  }\n}\n\nfunction stripZeroPrefix(digits: Array<number>) {\n  for (let i = 0; i < digits.length; i++) {\n    if (digits[i] !== 0) {\n      return digits.slice(i);\n    }\n  }\n\n  return []\n}\n\nfunction optionMap<T, S>(arg: T | null, fn: (arg: T) => S) {\n  if (arg === null) {\n    return null\n  } else {\n    return fn(arg);\n  }\n}\n\nfunction digitsToNumber(digits: Readonly<Array<number>>) {\n  let acc = 0;\n  for (const digit of digits) {\n    acc = (acc * 10) + digit;\n  }\n  return acc;\n}\n\nclass BillInputComponent extends React.Component<BillAmountCmoponentProperties, BillAmountComponentState> {\n  constructor(props: BillAmountCmoponentProperties) {\n    super(props);\n    this.state = { value: [], errorMessage: null }\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    let oldState = this.state.value;\n    let newState = optionMap(parseBillAmountInput(event.target.value), stripZeroPrefix);\n    if (newState !== null && !isArrayEqual(newState, oldState)) {\n      this.setState({ value: newState, errorMessage: null });\n    }\n  }\n\n  handleSubmit(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    event.preventDefault();\n    let billAmountInCents = digitsToNumber(this.state.value)\n    if (billAmountInCents === 0) {\n      let newState = { ...this.state }\n      newState.errorMessage = \"Bill Amount cannot be zero!\"\n      this.setState(newState)\n    } else {\n      this.props.onSubmit(billAmountInCents);\n    }\n  }\n\n  renderErrorMessage() {\n    if (this.state.errorMessage !== null) {\n      return <div>Oh noes :( {this.state.errorMessage}</div>\n    }\n  }\n\n  render() {\n    return <div>\n      {this.renderErrorMessage()}\n      <input value={prettifyDigits(this.state.value)} onChange={this.handleChange.bind(this)} />\n      <button onClick={this.handleSubmit.bind(this)}>Submit</button>\n    </div>\n  }\n}\n\nclass InputBillComponent extends React.Component<InputBillProps, InputBillState> {\n  // eslint-disable-next-line\n  constructor(props: InputBillProps) {\n    super(props);\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(amountInCents: number) {\n    this.props.onSubmit(amountInCents);\n  }\n\n  render() {\n    return (\n      <div className='input-bill-amount'>\n        <div className='input-prompt'>\n          <strong>Enter bill amount</strong>\n        </div>\n        <div>\n          <BillInputComponent\n            onSubmit={this.handleSubmit.bind(this)}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default InputBillComponent;\n","import React from 'react';\n\nimport { Input, Scenario, ServiceQuality } from \"./Model\"\nimport { ResultComponent } from \"./Result\"\nimport { ScenarioComponent } from \"./ScenarioComponent\"\nimport { ServiceQualityComponent } from \"./ServiceQualityComponent\"\nimport InputBillComponent from \"./InputBillComponent\"\nimport { calculateTip } from \"./TipEngine\"\nimport './App.css';\n\ninterface PageProps {\n  input: Input,\n  onSelectScenario: (scenario: Scenario) => void,\n  onSelectServiceQuality: (serviceQuality: ServiceQuality) => void,\n  onSubmitBillAmount: (billAmount: number) => void,\n}\nexport class Page extends React.Component<PageProps, {}> {\n  render() {\n    if (this.props.input.scenario === null) {\n      return <ScenarioComponent onSelectScenario={(scenario) => this.props.onSelectScenario(scenario)} />\n    }\n\n    if (this.props.input.billAmount === null) {\n      return <InputBillComponent onSubmit={(billAmount) => this.props.onSubmitBillAmount(billAmount)} />\n    }\n\n    if (this.props.input.serviceQuality === null) {\n      return <ServiceQualityComponent onSelectServiceQuality={(serviceQuality) => this.props.onSelectServiceQuality(serviceQuality)} />\n    }\n\n    let tipAmount = calculateTip(this.props.input);\n\n    if (tipAmount !== null) {\n      return (\n        <div className='result'>\n          <ResultComponent\n            input={this.props.input}\n            billAmount={this.props.input.billAmount}\n            tipAmount={tipAmount}\n          />\n        </div>\n      )\n    }\n  }\n};\n","import React from 'react';\n\nimport { Input, Scenario, ServiceQuality } from \"./Model\"\nimport { Page } from \"./Page\"\nimport './App.css';\n\nconst nullInput: Input = {\n  scenario: null,\n  billAmount: null,\n  serviceQuality: null,\n}\n\ninterface AppState {\n  history: Input[],\n  stepNumber: number,\n}\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      history: [nullInput],\n      stepNumber: 0,\n    }\n  }\n\n  handleSelectScenario(scenario: Scenario) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = { ...history[history.length - 1] }\n\n    current.scenario = scenario;\n\n    if (scenario === Scenario.Valet || scenario === Scenario.RestaurantDelivery || scenario === Scenario.RestaurantTakeout) {\n      current.billAmount = 0;\n    }\n\n    this.setState({\n      history: history.concat(current),\n      stepNumber: history.length,\n    });\n  }\n\n  handleSelectServiceQuality(serviceQuality: ServiceQuality) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = { ...history[history.length - 1] }\n\n    current.serviceQuality = serviceQuality;\n\n    this.setState({\n      history: history.concat(current),\n      stepNumber: history.length,\n    });\n  }\n\n  handleSubmitBillAmount(billAmount: number) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = { ...history[history.length - 1] }\n\n    current.billAmount = billAmount;\n\n    this.setState({\n      history: history.concat(current),\n      stepNumber: history.length,\n    });\n  }\n\n  startAgain() {\n    this.setState({\n      history: [nullInput],\n      stepNumber: 0,\n    })\n  }\n  getStartAgainButton() {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = { ...history[history.length - 1] }\n\n    if (current.scenario !== null && current.billAmount !== null && current.serviceQuality !== null) {\n      return (\n        <button onClick={() => this.startAgain()}>Start Again</button>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n\n  goBack() {\n    const stepNumber = this.state.stepNumber - 1\n    this.setState({\n      stepNumber: stepNumber,\n    })\n  }\n  getBackButton() {\n    if (this.state.stepNumber !== 0) {\n      return (\n        <button onClick={() => this.goBack()}>Back</button>\n      )\n    } else {\n      return <div></div>\n    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n\n    return (\n      <div className='app'>\n        <div className='page'>\n          < Page\n            input={current}\n            onSelectScenario={(scenario: Scenario) => this.handleSelectScenario(scenario)}\n            onSelectServiceQuality={(serviceQuality: ServiceQuality) => this.handleSelectServiceQuality(serviceQuality)}\n            onSubmitBillAmount={(billAmount: number) => this.handleSubmitBillAmount(billAmount)}\n          />\n        </div>\n        <div className='navigation'>\n          <div>{this.getBackButton()}</div>\n          <div>{this.getStartAgainButton()}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif ('serviceWorker' in navigator) {\n  console.log(\"Hello there\")\n  navigator.serviceWorker.register('/sw.js', { scope: \"/\" }).then(function(reg) {\n    console.log('Successfully registered service worker', reg);\n  }).catch(function(err) {\n    console.warn('Error whilst registering service worker', err);\n  });\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}